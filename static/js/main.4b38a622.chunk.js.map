{"version":3,"sources":["components/AddTodo.js","components/TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["AddTodo","state","Id","Title","Status","handleIdChange","event","console","log","target","value","setState","handleTitleChange","handleStatusChange","handleToDoSubmit","preventDefault","props","onAdd","onSubmit","this","className","onChange","placeholder","type","Component","TodoList","todos","deleteToDo","todo","filteredItems","filter","x","addToDo","editToDo","map","style","color","onClick","icon","library","add","faTrash","faPlus","faEdit","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4b38a622.chunk.js","sourcesContent":["import { Component } from \"react\";\r\n\r\n//Class\r\nexport default class AddTodo extends Component {\r\n\r\n    state = {\r\n        Id: \"\",\r\n        Title: \"\",\r\n        Status:\"Pending\"\r\n    };\r\n\r\n    handleIdChange = (event) => {\r\n        console.log(event.target.value);\r\n        this.setState({\r\n            Id: event.target.value\r\n        })\r\n    };\r\n\r\n    handleTitleChange = (event) => {\r\n        console.log(event.target.value);\r\n        this.setState({\r\n            Title: event.target.value\r\n        })\r\n    };\r\n\r\n    handleStatusChange = (event) => {\r\n        console.log(event.target.value);\r\n        this.setState({\r\n            Status: event.target.value\r\n        })\r\n    };\r\n\r\n    handleToDoSubmit = (event) => {\r\n        event.preventDefault(); // Don't want to submit whole form to be submitted so It will prevent to submit the whold form.\r\n        this.props.onAdd({ //Pass new added ToDo object from child to parent\r\n            Id: this.state.Id,\r\n            Title: this.state.Title,\r\n            Status: this.state.Status\r\n        });\r\n        this.setState({\r\n            Id: \"\",\r\n            Title: \"\",\r\n            Status: \"Pending\"\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h3>\r\n                    Add ToDo\r\n                </h3>\r\n                <form onSubmit={ this.handleToDoSubmit }>\r\n                    <div className=\"form-group\">\r\n                        <input value={ this.state.Id } onChange={this.handleIdChange} className=\"form-control\" placeholder=\"Enter Id\"></input>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <input value={this.state.Title} onChange={this.handleTitleChange} className=\"form-control\" placeholder=\"Enter Title\"></input>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <select value={this.state.Status } onChange={this.handleStatusChange} className=\"form-control\">\r\n                            <option value=\"Pending\">Pending</option>\r\n                            <option value=\"Done\">Done</option>\r\n                        </select>\r\n                    </div>\r\n                    <button type=\"submit\" className=\"form-control btn btn-primary\">Add Todo</button>\r\n                </form>\r\n            </div >\r\n        );\r\n    }\r\n}","import { Component } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport AddTodo from \"./AddTodo\";\r\n//Class\r\nexport default class TodoList extends Component {\r\n    state = {\r\n        todos: [\r\n            { Id: '1', Title: 'Title 1', Status: 'Pending' },\r\n            { Id: '2', Title: 'Title 2', Status: 'Done' },\r\n        ]\r\n    };\r\n\r\n    deleteToDo = (todo) => {\r\n        const filteredItems = this.state.todos.filter(x=>x.Id !== todo.Id);\r\n        this.setState({\r\n            todos: filteredItems\r\n        });\r\n    };\r\n\r\n    addToDo = (todo) => {\r\n        this.setState({\r\n            todos: [...this.state.todos, todo]    //Three dots are called spread operator. It's get original todos array list and merge with new added todo object.\r\n        });\r\n    };\r\n        \r\n    editToDo = (x) => {\r\n        this.setState(state => ({\r\n            todos: state.todos.map(todo => {\r\n                if (todo.Id === x.Id) {\r\n                    return {\r\n                        ...todo,\r\n                        Status: todo.Status === \"Done\" ? \"Pending\" : \"Done\"\r\n                    };\r\n                }\r\n                else {\r\n                    return todo;\r\n                }\r\n            })\r\n        }));\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <AddTodo onAdd={this.addToDo}></AddTodo>\r\n                {/*onAdd is props to call addToDo method.*/}\r\n                <h1>To do List</h1>\r\n                <table className=\"table\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Id</th>\r\n                            <th>Title</th>\r\n                            <th>Status</th>\r\n                            <th>Action</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {this.state.todos.map(x => {\r\n                            return (<tr key={ x.Id }>\r\n                                <td>{x.Id}</td>\r\n                                <td>{x.Title}</td>\r\n                                <td style={{ color: x.Status === \"Done\" ? \"green\" : \"red\" }}>{x.Status}</td>\r\n                                <td>\r\n                                    <button type=\"button\" className=\"btn btn-primary\" onClick={() => {\r\n                                        this.deleteToDo(x)\r\n                                    }}>\r\n                                        <span>\r\n                                            <FontAwesomeIcon icon=\"trash\"></FontAwesomeIcon>\r\n                                        </span>\r\n                                    </button> |\r\n                                    <button type=\"button\" className=\"btn btn-primary\" onClick={() => {\r\n                                        this.editToDo(x)\r\n                                    }}>\r\n                                        <span>\r\n                                            <FontAwesomeIcon icon=\"edit\"></FontAwesomeIcon>\r\n                                        </span>\r\n                                    </button>\r\n                                </td>\r\n                            </tr>);\r\n                        })\r\n                        }\r\n                    </tbody>\r\n                </table>\r\n            </div >\r\n        );\r\n    }\r\n}\r\n\r\n","import './App.css';\nimport TodoList from './components/TodoList';\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { faTrash,faPlus,faEdit } from \"@fortawesome/free-solid-svg-icons\";\n//import Demo from './components/Demo';\n//import Demo1 from './components/Demo1';\n//import Parent from './components/Parent';\n\nlibrary.add(faTrash, faPlus, faEdit);\n\nfunction App() {\n    return (\n        <div className=\"App\">  \n            <h1> App component</h1>\n            <TodoList></TodoList>\n            {/*<Demo></Demo>*/}\n            {/*<Demo1 Title=\"I am text for functional component\"></Demo1>*/}\n            {/*<Parent></Parent>*/}\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}